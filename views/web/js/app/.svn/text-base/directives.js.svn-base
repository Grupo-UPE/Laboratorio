'use strict';

/* Directives */
    
var appDir = angular.module('ngdemo.directives', []);
	
appDir.directive('appVersion', ['version', function(version) {
    return function(scope, elm, attrs) {
      elm.text(version);
    };
  }]);

appDir.directive('datatables', function initialize($compile) {
	return { 
		link: function (scope, element, attrs) {
			// apply DataTable options, use defaults if none specified by user
			var options = {
				"bPaginate": true,
	    		"bProcessing": true,
	    		"bServerSide": true,
	    		"bStateSave": false,
	    		"bSearch": false,
	    		"sServerMethod": "POST",
	    		"sAjaxSource": url,
	    		"sAjaxDataProp": "data",
	    		"sEcho": "1",
	    		"sPaginationType": "four_button",
	    		"aLengthMenu": [5, 10, 20, 50, "Todo"],
	    		"iDisplayStart": 0,
	    		"iDisplayLength": 5,
	    		"oLanguage": {
	    			"sUrl": "lenguaje.txt",
	    		},
	    		"aaSorting": initialOrder,
	    		"aoColumns": columns,
	    		// esta funcion es para que funcione con Datatables, debido a que Angular no reconoce las filas insertadas en el DOM en forma dinamica por Datatables
	    		"fnCreatedRow": function (nRow, aData, iDataIndex) {
		        	addActions(nRow);
		        	$compile(nRow)(scope);
		        },
	        };
	        
			// apply the plugin
	        var oTable = element.dataTable(options);
	        
	        $("#btnApplyFilters").click(function () {
				var filters = new Array();	
			    $("tfoot input[type=text]").each(function (i) {
			    	filters.push(this.value);
			    });
			    oTable.fnArrayFilter(filters);
			});
			
			$("#btnClearFilters").click(function () {
				oTable.fnFilterClear();
			});
			
	        // watch for any changes to our data, rebuild the DataTable
	        scope.$watch(attrs.aaData, function(value) {
	            var val = value || null;
	            if (val) {
	            	alert("clear");
	            	oTable.fnClearTable();
	            	oTable.fnAddData(scope.$eval(attrs.aaData));
	            }
	        });
	    }};
	});